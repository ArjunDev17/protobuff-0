// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: street.proto
// Protobuf C++ Version: 5.28.3

#include "street.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr Street::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        streetname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        city_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Street::Street(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StreetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreetDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreetDefaultTypeInternal() {}
  union {
    Street _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreetDefaultTypeInternal _Street_default_instance_;
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_street_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_street_2eproto = nullptr;
const ::uint32_t
    TableStruct_street_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::Street, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Street, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Street, _impl_.streetname_),
        PROTOBUF_FIELD_OFFSET(::Street, _impl_.city_),
        ~0u,
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::Street)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_Street_default_instance_._instance,
};
const char descriptor_table_protodef_street_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014street.proto\032\ncity.proto\"1\n\006Street\022\022\n\n"
    "streetName\030\001 \001(\t\022\023\n\004city\030\002 \001(\0132\005.Cityb\006p"
    "roto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_street_2eproto_deps[1] =
    {
        &::descriptor_table_city_2eproto,
};
static ::absl::once_flag descriptor_table_street_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_street_2eproto = {
    false,
    false,
    85,
    descriptor_table_protodef_street_2eproto,
    "street.proto",
    &descriptor_table_street_2eproto_once,
    descriptor_table_street_2eproto_deps,
    1,
    1,
    schemas,
    file_default_instances,
    TableStruct_street_2eproto::offsets,
    file_level_enum_descriptors_street_2eproto,
    file_level_service_descriptors_street_2eproto,
};
// ===================================================================

class Street::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Street>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Street, _impl_._has_bits_);
};

void Street::clear_city() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.city_ != nullptr) _impl_.city_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Street::Street(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Street)
}
inline PROTOBUF_NDEBUG_INLINE Street::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Street& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        streetname_(arena, from.streetname_) {}

Street::Street(
    ::google::protobuf::Arena* arena,
    const Street& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Street* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.city_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::City>(
                              arena, *from._impl_.city_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:Street)
}
inline PROTOBUF_NDEBUG_INLINE Street::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        streetname_(arena) {}

inline void Street::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.city_ = {};
}
Street::~Street() {
  // @@protoc_insertion_point(destructor:Street)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Street::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.streetname_.Destroy();
  delete _impl_.city_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Street::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Street_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Street::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Street>(),
            ::google::protobuf::Message::GetNewImpl<Street>(),
            ::google::protobuf::Message::GetClearImpl<Street>(), &Street::ByteSizeLong,
                &Street::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Street, _impl_._cached_size_),
            false,
        },
        &Street::kDescriptorMethods,
        &descriptor_table_street_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Street::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 25, 2> Street::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Street, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Street>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .City city = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Street, _impl_.city_)}},
    // string streetName = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Street, _impl_.streetname_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string streetName = 1;
    {PROTOBUF_FIELD_OFFSET(Street, _impl_.streetname_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .City city = 2;
    {PROTOBUF_FIELD_OFFSET(Street, _impl_.city_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::City>()},
  }}, {{
    "\6\12\0\0\0\0\0\0"
    "Street"
    "streetName"
  }},
};

PROTOBUF_NOINLINE void Street::Clear() {
// @@protoc_insertion_point(message_clear_start:Street)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.streetname_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.city_ != nullptr);
    _impl_.city_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Street::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Street& this_ = static_cast<const Street&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Street::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Street& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Street)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string streetName = 1;
          if (!this_._internal_streetname().empty()) {
            const std::string& _s = this_._internal_streetname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Street.streetName");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .City city = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.city_, this_._impl_.city_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Street)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Street::ByteSizeLong(const MessageLite& base) {
          const Street& this_ = static_cast<const Street&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Street::ByteSizeLong() const {
          const Street& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Street)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string streetName = 1;
            if (!this_._internal_streetname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_streetname());
            }
          }
           {
            // .City city = 2;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.city_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Street::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Street*>(&to_msg);
  auto& from = static_cast<const Street&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:Street)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_streetname().empty()) {
    _this->_internal_set_streetname(from._internal_streetname());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.city_ != nullptr);
    if (_this->_impl_.city_ == nullptr) {
      _this->_impl_.city_ =
          ::google::protobuf::Message::CopyConstruct<::City>(arena, *from._impl_.city_);
    } else {
      _this->_impl_.city_->MergeFrom(*from._impl_.city_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Street::CopyFrom(const Street& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Street)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Street::InternalSwap(Street* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.streetname_, &other->_impl_.streetname_, arena);
  swap(_impl_.city_, other->_impl_.city_);
}

::google::protobuf::Metadata Street::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_street_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
