// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: building.proto
// Protobuf C++ Version: 5.28.3

#include "building.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr Building::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        buildingname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        street_{nullptr},
        buildingnumber_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Building::Building(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BuildingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BuildingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BuildingDefaultTypeInternal() {}
  union {
    Building _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BuildingDefaultTypeInternal _Building_default_instance_;
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_building_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_building_2eproto = nullptr;
const ::uint32_t
    TableStruct_building_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::Building, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Building, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Building, _impl_.buildingname_),
        PROTOBUF_FIELD_OFFSET(::Building, _impl_.buildingnumber_),
        PROTOBUF_FIELD_OFFSET(::Building, _impl_.street_),
        ~0u,
        ~0u,
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 11, -1, sizeof(::Building)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_Building_default_instance_._instance,
};
const char descriptor_table_protodef_building_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\016building.proto\032\014street.proto\"Q\n\010Buildi"
    "ng\022\024\n\014buildingName\030\001 \001(\t\022\026\n\016buildingNumb"
    "er\030\002 \001(\r\022\027\n\006street\030\003 \001(\0132\007.Streetb\006proto"
    "3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_building_2eproto_deps[1] =
    {
        &::descriptor_table_street_2eproto,
};
static ::absl::once_flag descriptor_table_building_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_building_2eproto = {
    false,
    false,
    121,
    descriptor_table_protodef_building_2eproto,
    "building.proto",
    &descriptor_table_building_2eproto_once,
    descriptor_table_building_2eproto_deps,
    1,
    1,
    schemas,
    file_default_instances,
    TableStruct_building_2eproto::offsets,
    file_level_enum_descriptors_building_2eproto,
    file_level_service_descriptors_building_2eproto,
};
// ===================================================================

class Building::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Building>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Building, _impl_._has_bits_);
};

void Building::clear_street() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.street_ != nullptr) _impl_.street_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Building::Building(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Building)
}
inline PROTOBUF_NDEBUG_INLINE Building::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Building& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        buildingname_(arena, from.buildingname_) {}

Building::Building(
    ::google::protobuf::Arena* arena,
    const Building& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Building* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.street_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::Street>(
                              arena, *from._impl_.street_)
                        : nullptr;
  _impl_.buildingnumber_ = from._impl_.buildingnumber_;

  // @@protoc_insertion_point(copy_constructor:Building)
}
inline PROTOBUF_NDEBUG_INLINE Building::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        buildingname_(arena) {}

inline void Building::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, street_),
           0,
           offsetof(Impl_, buildingnumber_) -
               offsetof(Impl_, street_) +
               sizeof(Impl_::buildingnumber_));
}
Building::~Building() {
  // @@protoc_insertion_point(destructor:Building)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Building::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.buildingname_.Destroy();
  delete _impl_.street_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Building::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Building_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Building::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Building>(),
            ::google::protobuf::Message::GetNewImpl<Building>(),
            ::google::protobuf::Message::GetClearImpl<Building>(), &Building::ByteSizeLong,
                &Building::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Building, _impl_._cached_size_),
            false,
        },
        &Building::kDescriptorMethods,
        &descriptor_table_building_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Building::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 29, 2> Building::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Building, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Building>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string buildingName = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Building, _impl_.buildingname_)}},
    // uint32 buildingNumber = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Building, _impl_.buildingnumber_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Building, _impl_.buildingnumber_)}},
    // .Street street = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Building, _impl_.street_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string buildingName = 1;
    {PROTOBUF_FIELD_OFFSET(Building, _impl_.buildingname_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 buildingNumber = 2;
    {PROTOBUF_FIELD_OFFSET(Building, _impl_.buildingnumber_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .Street street = 3;
    {PROTOBUF_FIELD_OFFSET(Building, _impl_.street_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Street>()},
  }}, {{
    "\10\14\0\0\0\0\0\0"
    "Building"
    "buildingName"
  }},
};

PROTOBUF_NOINLINE void Building::Clear() {
// @@protoc_insertion_point(message_clear_start:Building)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.buildingname_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.street_ != nullptr);
    _impl_.street_->Clear();
  }
  _impl_.buildingnumber_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Building::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Building& this_ = static_cast<const Building&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Building::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Building& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Building)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string buildingName = 1;
          if (!this_._internal_buildingname().empty()) {
            const std::string& _s = this_._internal_buildingname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Building.buildingName");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // uint32 buildingNumber = 2;
          if (this_._internal_buildingnumber() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_buildingnumber(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .Street street = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.street_, this_._impl_.street_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Building)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Building::ByteSizeLong(const MessageLite& base) {
          const Building& this_ = static_cast<const Building&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Building::ByteSizeLong() const {
          const Building& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Building)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string buildingName = 1;
            if (!this_._internal_buildingname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_buildingname());
            }
          }
           {
            // .Street street = 3;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.street_);
            }
          }
           {
            // uint32 buildingNumber = 2;
            if (this_._internal_buildingnumber() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_buildingnumber());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Building::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Building*>(&to_msg);
  auto& from = static_cast<const Building&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:Building)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_buildingname().empty()) {
    _this->_internal_set_buildingname(from._internal_buildingname());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.street_ != nullptr);
    if (_this->_impl_.street_ == nullptr) {
      _this->_impl_.street_ =
          ::google::protobuf::Message::CopyConstruct<::Street>(arena, *from._impl_.street_);
    } else {
      _this->_impl_.street_->MergeFrom(*from._impl_.street_);
    }
  }
  if (from._internal_buildingnumber() != 0) {
    _this->_impl_.buildingnumber_ = from._impl_.buildingnumber_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Building::CopyFrom(const Building& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Building)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Building::InternalSwap(Building* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.buildingname_, &other->_impl_.buildingname_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Building, _impl_.buildingnumber_)
      + sizeof(Building::_impl_.buildingnumber_)
      - PROTOBUF_FIELD_OFFSET(Building, _impl_.street_)>(
          reinterpret_cast<char*>(&_impl_.street_),
          reinterpret_cast<char*>(&other->_impl_.street_));
}

::google::protobuf::Metadata Building::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_building_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
